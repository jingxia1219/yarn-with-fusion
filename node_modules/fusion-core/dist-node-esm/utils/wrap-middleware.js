/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
import path from 'path';
import { now } from './now.js';

const getSources = stacks => {
  // stack is of format: 'at file_xyz.js (/some/file/system/path.js:30:1)\n'
  return stacks.map(({
    type,
    stack = ''
  }) => {
    return {
      type,
      source: stack.split('\n').map(line => line.match(/\((.*?)\)/)).filter(match => match && match[1]).map(match => match[1]).map(to => true ? path.relative(process.cwd(), to) : to).shift()
    };
  });
}; // Wraps middleware for measuring middleware timing


export default function wrapMiddleware(existingMiddleware, token) {
  return async (ctx, next) => {
    const downstreamStart = now();
    let upstreamStart = 0;
    const timing = {
      token: token.name,
      source: JSON.stringify(getSources(token.stacks)),
      downstream: -1,
      upstream: -1
    };

    if (ctx.timing) {
      ctx.timing.middleware.push(timing);
    }

    const wrapNext = async () => {
      timing.downstream = now() - downstreamStart;
      await next();
      upstreamStart = now();
    };

    await existingMiddleware(ctx, wrapNext);
    timing.upstream = now() - upstreamStart;
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy91dGlscy93cmFwLW1pZGRsZXdhcmUuanMiXSwibmFtZXMiOlsicGF0aCIsIm5vdyIsImdldFNvdXJjZXMiLCJzdGFja3MiLCJtYXAiLCJ0eXBlIiwic3RhY2siLCJzb3VyY2UiLCJzcGxpdCIsImxpbmUiLCJtYXRjaCIsImZpbHRlciIsInRvIiwicmVsYXRpdmUiLCJwcm9jZXNzIiwiY3dkIiwic2hpZnQiLCJ3cmFwTWlkZGxld2FyZSIsImV4aXN0aW5nTWlkZGxld2FyZSIsInRva2VuIiwiY3R4IiwibmV4dCIsImRvd25zdHJlYW1TdGFydCIsInVwc3RyZWFtU3RhcnQiLCJ0aW1pbmciLCJuYW1lIiwiSlNPTiIsInN0cmluZ2lmeSIsImRvd25zdHJlYW0iLCJ1cHN0cmVhbSIsIm1pZGRsZXdhcmUiLCJwdXNoIiwid3JhcE5leHQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBT0EsSUFBUCxNQUFpQixNQUFqQjtBQUNBLFNBQVFDLEdBQVIsUUFBa0IsVUFBbEI7O0FBRUEsTUFBTUMsVUFBVSxHQUFJQyxNQUFELElBQVk7QUFDN0I7QUFDQSxTQUFPQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxDQUFDO0FBQUNDLElBQUFBLElBQUQ7QUFBT0MsSUFBQUEsS0FBSyxHQUFHO0FBQWYsR0FBRCxLQUF3QjtBQUN4QyxXQUFPO0FBQ0xELE1BQUFBLElBREs7QUFFTEUsTUFBQUEsTUFBTSxFQUFFRCxLQUFLLENBQ1ZFLEtBREssQ0FDQyxJQURELEVBRUxKLEdBRkssQ0FFQUssSUFBRCxJQUFVQSxJQUFJLENBQUNDLEtBQUwsQ0FBVyxXQUFYLENBRlQsRUFHTEMsTUFISyxDQUdHRCxLQUFELElBQVdBLEtBQUssSUFBSUEsS0FBSyxDQUFDLENBQUQsQ0FIM0IsRUFJTE4sR0FKSyxDQUlBTSxLQUFELElBQVdBLEtBQUssQ0FBQyxDQUFELENBSmYsRUFLTE4sR0FMSyxDQUtBUSxFQUFELElBQVMsT0FBV1osSUFBSSxDQUFDYSxRQUFMLENBQWNDLE9BQU8sQ0FBQ0MsR0FBUixFQUFkLEVBQTZCSCxFQUE3QixDQUFYLEdBQThDQSxFQUx0RCxFQU1MSSxLQU5LO0FBRkgsS0FBUDtBQVVELEdBWE0sQ0FBUDtBQVlELENBZEQsQyxDQWdCQTs7O0FBQ0EsZUFBZSxTQUFTQyxjQUFULENBQXdCQyxrQkFBeEIsRUFBNENDLEtBQTVDLEVBQW1EO0FBQ2hFLFNBQU8sT0FBT0MsR0FBUCxFQUFZQyxJQUFaLEtBQXFCO0FBQzFCLFVBQU1DLGVBQWUsR0FBR3JCLEdBQUcsRUFBM0I7QUFDQSxRQUFJc0IsYUFBYSxHQUFHLENBQXBCO0FBRUEsVUFBTUMsTUFBTSxHQUFHO0FBQ2JMLE1BQUFBLEtBQUssRUFBRUEsS0FBSyxDQUFDTSxJQURBO0FBRWJsQixNQUFBQSxNQUFNLEVBQUVtQixJQUFJLENBQUNDLFNBQUwsQ0FBZXpCLFVBQVUsQ0FBQ2lCLEtBQUssQ0FBQ2hCLE1BQVAsQ0FBekIsQ0FGSztBQUdieUIsTUFBQUEsVUFBVSxFQUFFLENBQUMsQ0FIQTtBQUliQyxNQUFBQSxRQUFRLEVBQUUsQ0FBQztBQUpFLEtBQWY7O0FBTUEsUUFBSVQsR0FBRyxDQUFDSSxNQUFSLEVBQWdCO0FBQ2RKLE1BQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXTSxVQUFYLENBQXNCQyxJQUF0QixDQUEyQlAsTUFBM0I7QUFDRDs7QUFFRCxVQUFNUSxRQUFRLEdBQUcsWUFBWTtBQUMzQlIsTUFBQUEsTUFBTSxDQUFDSSxVQUFQLEdBQW9CM0IsR0FBRyxLQUFLcUIsZUFBNUI7QUFDQSxZQUFNRCxJQUFJLEVBQVY7QUFDQUUsTUFBQUEsYUFBYSxHQUFHdEIsR0FBRyxFQUFuQjtBQUNELEtBSkQ7O0FBS0EsVUFBTWlCLGtCQUFrQixDQUFDRSxHQUFELEVBQU1ZLFFBQU4sQ0FBeEI7QUFDQVIsSUFBQUEsTUFBTSxDQUFDSyxRQUFQLEdBQWtCNUIsR0FBRyxLQUFLc0IsYUFBMUI7QUFDRCxHQXJCRDtBQXNCRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBDb3B5cmlnaHQgKGMpIDIwMTggVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAbm9mbG93XG4gKi9cbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHtub3d9IGZyb20gJy4vbm93LmpzJztcblxuY29uc3QgZ2V0U291cmNlcyA9IChzdGFja3MpID0+IHtcbiAgLy8gc3RhY2sgaXMgb2YgZm9ybWF0OiAnYXQgZmlsZV94eXouanMgKC9zb21lL2ZpbGUvc3lzdGVtL3BhdGguanM6MzA6MSlcXG4nXG4gIHJldHVybiBzdGFja3MubWFwKCh7dHlwZSwgc3RhY2sgPSAnJ30pID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZSxcbiAgICAgIHNvdXJjZTogc3RhY2tcbiAgICAgICAgLnNwbGl0KCdcXG4nKVxuICAgICAgICAubWFwKChsaW5lKSA9PiBsaW5lLm1hdGNoKC9cXCgoLio/KVxcKS8pKVxuICAgICAgICAuZmlsdGVyKChtYXRjaCkgPT4gbWF0Y2ggJiYgbWF0Y2hbMV0pXG4gICAgICAgIC5tYXAoKG1hdGNoKSA9PiBtYXRjaFsxXSlcbiAgICAgICAgLm1hcCgodG8pID0+IChfX05PREVfXyA/IHBhdGgucmVsYXRpdmUocHJvY2Vzcy5jd2QoKSwgdG8pIDogdG8pKVxuICAgICAgICAuc2hpZnQoKSxcbiAgICB9O1xuICB9KTtcbn07XG5cbi8vIFdyYXBzIG1pZGRsZXdhcmUgZm9yIG1lYXN1cmluZyBtaWRkbGV3YXJlIHRpbWluZ1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd3JhcE1pZGRsZXdhcmUoZXhpc3RpbmdNaWRkbGV3YXJlLCB0b2tlbikge1xuICByZXR1cm4gYXN5bmMgKGN0eCwgbmV4dCkgPT4ge1xuICAgIGNvbnN0IGRvd25zdHJlYW1TdGFydCA9IG5vdygpO1xuICAgIGxldCB1cHN0cmVhbVN0YXJ0ID0gMDtcblxuICAgIGNvbnN0IHRpbWluZyA9IHtcbiAgICAgIHRva2VuOiB0b2tlbi5uYW1lLFxuICAgICAgc291cmNlOiBKU09OLnN0cmluZ2lmeShnZXRTb3VyY2VzKHRva2VuLnN0YWNrcykpLFxuICAgICAgZG93bnN0cmVhbTogLTEsXG4gICAgICB1cHN0cmVhbTogLTEsXG4gICAgfTtcbiAgICBpZiAoY3R4LnRpbWluZykge1xuICAgICAgY3R4LnRpbWluZy5taWRkbGV3YXJlLnB1c2godGltaW5nKTtcbiAgICB9XG5cbiAgICBjb25zdCB3cmFwTmV4dCA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRpbWluZy5kb3duc3RyZWFtID0gbm93KCkgLSBkb3duc3RyZWFtU3RhcnQ7XG4gICAgICBhd2FpdCBuZXh0KCk7XG4gICAgICB1cHN0cmVhbVN0YXJ0ID0gbm93KCk7XG4gICAgfTtcbiAgICBhd2FpdCBleGlzdGluZ01pZGRsZXdhcmUoY3R4LCB3cmFwTmV4dCk7XG4gICAgdGltaW5nLnVwc3RyZWFtID0gbm93KCkgLSB1cHN0cmVhbVN0YXJ0O1xuICB9O1xufVxuIl19