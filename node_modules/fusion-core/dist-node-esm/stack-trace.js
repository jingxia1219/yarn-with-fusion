/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
export function captureStackTrace(caller) {
  // For monitoring in production, use a single format independent of browser
  if (false && !(process.env.NODE_ENV !== "production")) {
    return new Error().stack;
  } else {
    if ('captureStackTrace' in Error) {
      const err = {};
      Error.captureStackTrace(err, caller);
      return err.stack;
    } else {
      return new Error().stack;
    }
  }
}
export class DIError extends Error {
  constructor({
    message,
    errorDoc,
    caller,
    stack
  }) {
    super(message);

    if (errorDoc) {
      this.link = `https://github.com/fusionjs/fusionjs/tree/master/errors/${errorDoc}.md`;
    }

    if (true || process.env.NODE_ENV !== "production") {
      if (caller && 'captureStackTrace' in Error) {
        Error.captureStackTrace(this, caller);
      }
    }

    if (stack) {
      // Replace the DIError stack trace with the supplied stack
      // Assumes `message` contains no new lines
      const diErrorMessage = this.stack.split('\n')[0];
      const stackOverride = stack.split('\n');
      stackOverride[0] = diErrorMessage;
      this.stack = stackOverride.join('\n');
    }
  }

}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zdGFjay10cmFjZS5qcyJdLCJuYW1lcyI6WyJjYXB0dXJlU3RhY2tUcmFjZSIsImNhbGxlciIsIkVycm9yIiwic3RhY2siLCJlcnIiLCJESUVycm9yIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwiZXJyb3JEb2MiLCJsaW5rIiwiZGlFcnJvck1lc3NhZ2UiLCJzcGxpdCIsInN0YWNrT3ZlcnJpZGUiLCJqb2luIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLE9BQU8sU0FBU0EsaUJBQVQsQ0FBMkJDLE1BQTNCLEVBQW1DO0FBQ3hDO0FBQ0EsTUFBSSxTQUFlLHdDQUFuQixFQUE2QjtBQUMzQixXQUFPLElBQUlDLEtBQUosR0FBWUMsS0FBbkI7QUFDRCxHQUZELE1BRU87QUFDTCxRQUFJLHVCQUF1QkQsS0FBM0IsRUFBa0M7QUFDaEMsWUFBTUUsR0FBRyxHQUFHLEVBQVo7QUFDQUYsTUFBQUEsS0FBSyxDQUFDRixpQkFBTixDQUF3QkksR0FBeEIsRUFBNkJILE1BQTdCO0FBQ0EsYUFBT0csR0FBRyxDQUFDRCxLQUFYO0FBQ0QsS0FKRCxNQUlPO0FBQ0wsYUFBTyxJQUFJRCxLQUFKLEdBQVlDLEtBQW5CO0FBQ0Q7QUFDRjtBQUNGO0FBRUQsT0FBTyxNQUFNRSxPQUFOLFNBQXNCSCxLQUF0QixDQUE0QjtBQUNqQ0ksRUFBQUEsV0FBVyxDQUFDO0FBQUNDLElBQUFBLE9BQUQ7QUFBVUMsSUFBQUEsUUFBVjtBQUFvQlAsSUFBQUEsTUFBcEI7QUFBNEJFLElBQUFBO0FBQTVCLEdBQUQsRUFBcUM7QUFDOUMsVUFBTUksT0FBTjs7QUFDQSxRQUFJQyxRQUFKLEVBQWM7QUFDWixXQUFLQyxJQUFMLEdBQWEsMkRBQTBERCxRQUFTLEtBQWhGO0FBQ0Q7O0FBQ0QsUUFBSSw2Q0FBSixFQUF5QjtBQUN2QixVQUFJUCxNQUFNLElBQUksdUJBQXVCQyxLQUFyQyxFQUE0QztBQUMxQ0EsUUFBQUEsS0FBSyxDQUFDRixpQkFBTixDQUF3QixJQUF4QixFQUE4QkMsTUFBOUI7QUFDRDtBQUNGOztBQUNELFFBQUlFLEtBQUosRUFBVztBQUNUO0FBQ0E7QUFDQSxZQUFNTyxjQUFjLEdBQUcsS0FBS1AsS0FBTCxDQUFXUSxLQUFYLENBQWlCLElBQWpCLEVBQXVCLENBQXZCLENBQXZCO0FBQ0EsWUFBTUMsYUFBYSxHQUFHVCxLQUFLLENBQUNRLEtBQU4sQ0FBWSxJQUFaLENBQXRCO0FBQ0FDLE1BQUFBLGFBQWEsQ0FBQyxDQUFELENBQWIsR0FBbUJGLGNBQW5CO0FBQ0EsV0FBS1AsS0FBTCxHQUFhUyxhQUFhLENBQUNDLElBQWQsQ0FBbUIsSUFBbkIsQ0FBYjtBQUNEO0FBQ0Y7O0FBbkJnQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBDb3B5cmlnaHQgKGMpIDIwMTggVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAbm9mbG93XG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcHR1cmVTdGFja1RyYWNlKGNhbGxlcikge1xuICAvLyBGb3IgbW9uaXRvcmluZyBpbiBwcm9kdWN0aW9uLCB1c2UgYSBzaW5nbGUgZm9ybWF0IGluZGVwZW5kZW50IG9mIGJyb3dzZXJcbiAgaWYgKF9fQlJPV1NFUl9fICYmICFfX0RFVl9fKSB7XG4gICAgcmV0dXJuIG5ldyBFcnJvcigpLnN0YWNrO1xuICB9IGVsc2Uge1xuICAgIGlmICgnY2FwdHVyZVN0YWNrVHJhY2UnIGluIEVycm9yKSB7XG4gICAgICBjb25zdCBlcnIgPSB7fTtcbiAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKGVyciwgY2FsbGVyKTtcbiAgICAgIHJldHVybiBlcnIuc3RhY2s7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXcgRXJyb3IoKS5zdGFjaztcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIERJRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKHttZXNzYWdlLCBlcnJvckRvYywgY2FsbGVyLCBzdGFja30pIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICBpZiAoZXJyb3JEb2MpIHtcbiAgICAgIHRoaXMubGluayA9IGBodHRwczovL2dpdGh1Yi5jb20vZnVzaW9uanMvZnVzaW9uanMvdHJlZS9tYXN0ZXIvZXJyb3JzLyR7ZXJyb3JEb2N9Lm1kYDtcbiAgICB9XG4gICAgaWYgKF9fTk9ERV9fIHx8IF9fREVWX18pIHtcbiAgICAgIGlmIChjYWxsZXIgJiYgJ2NhcHR1cmVTdGFja1RyYWNlJyBpbiBFcnJvcikge1xuICAgICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBjYWxsZXIpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoc3RhY2spIHtcbiAgICAgIC8vIFJlcGxhY2UgdGhlIERJRXJyb3Igc3RhY2sgdHJhY2Ugd2l0aCB0aGUgc3VwcGxpZWQgc3RhY2tcbiAgICAgIC8vIEFzc3VtZXMgYG1lc3NhZ2VgIGNvbnRhaW5zIG5vIG5ldyBsaW5lc1xuICAgICAgY29uc3QgZGlFcnJvck1lc3NhZ2UgPSB0aGlzLnN0YWNrLnNwbGl0KCdcXG4nKVswXTtcbiAgICAgIGNvbnN0IHN0YWNrT3ZlcnJpZGUgPSBzdGFjay5zcGxpdCgnXFxuJyk7XG4gICAgICBzdGFja092ZXJyaWRlWzBdID0gZGlFcnJvck1lc3NhZ2U7XG4gICAgICB0aGlzLnN0YWNrID0gc3RhY2tPdmVycmlkZS5qb2luKCdcXG4nKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==