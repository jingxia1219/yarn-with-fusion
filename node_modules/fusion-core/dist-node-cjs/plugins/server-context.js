"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = middleware;

var _v = _interopRequireDefault(require("uuid/v4"));

var _uaParserJs = _interopRequireDefault(require("ua-parser-js"));

var _getEnv = _interopRequireDefault(require("../get-env.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const envVars = (0, _getEnv.default)();

function middleware(ctx, next) {
  // env vars
  ctx.rootDir = envVars.rootDir;
  ctx.env = envVars.env;
  ctx.prefix = envVars.prefix;
  ctx.assetPath = envVars.assetPath;
  ctx.cdnUrl = envVars.cdnUrl; // webpack-related things

  ctx.preloadChunks = [];
  ctx.webpackPublicPath = ctx.webpackPublicPath || envVars.cdnUrl || envVars.assetPath; // these are set by fusion-cli, however since fusion-cli plugins are not added when
  // running simulation tests, it is good to default them here

  ctx.syncChunks = ctx.syncChunks || [];
  ctx.chunkUrlMap = ctx.chunkUrlMap || new Map(); // fusion-specific things

  ctx.nonce = (0, _v.default)();
  ctx.useragent = new _uaParserJs.default(ctx.headers['user-agent']).getResult();
  ctx.element = null;
  ctx.rendered = null;
  ctx.postRenderEffects = [];
  ctx.universalValues = {};
  return next();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wbHVnaW5zL3NlcnZlci1jb250ZXh0LmpzIl0sIm5hbWVzIjpbImVudlZhcnMiLCJtaWRkbGV3YXJlIiwiY3R4IiwibmV4dCIsInJvb3REaXIiLCJlbnYiLCJwcmVmaXgiLCJhc3NldFBhdGgiLCJjZG5VcmwiLCJwcmVsb2FkQ2h1bmtzIiwid2VicGFja1B1YmxpY1BhdGgiLCJzeW5jQ2h1bmtzIiwiY2h1bmtVcmxNYXAiLCJNYXAiLCJub25jZSIsInVzZXJhZ2VudCIsIlVBUGFyc2VyIiwiaGVhZGVycyIsImdldFJlc3VsdCIsImVsZW1lbnQiLCJyZW5kZXJlZCIsInBvc3RSZW5kZXJFZmZlY3RzIiwidW5pdmVyc2FsVmFsdWVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBUUE7O0FBQ0E7O0FBQ0E7Ozs7QUFWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BLE1BQU1BLE9BQU8sR0FBRyxzQkFBaEI7O0FBRWUsU0FBU0MsVUFBVCxDQUFvQkMsR0FBcEIsRUFBeUJDLElBQXpCLEVBQStCO0FBQzVDO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0UsT0FBSixHQUFjSixPQUFPLENBQUNJLE9BQXRCO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0csR0FBSixHQUFVTCxPQUFPLENBQUNLLEdBQWxCO0FBQ0FILEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixHQUFhTixPQUFPLENBQUNNLE1BQXJCO0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ0ssU0FBSixHQUFnQlAsT0FBTyxDQUFDTyxTQUF4QjtBQUNBTCxFQUFBQSxHQUFHLENBQUNNLE1BQUosR0FBYVIsT0FBTyxDQUFDUSxNQUFyQixDQU40QyxDQVE1Qzs7QUFDQU4sRUFBQUEsR0FBRyxDQUFDTyxhQUFKLEdBQW9CLEVBQXBCO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ1EsaUJBQUosR0FDRVIsR0FBRyxDQUFDUSxpQkFBSixJQUF5QlYsT0FBTyxDQUFDUSxNQUFqQyxJQUEyQ1IsT0FBTyxDQUFDTyxTQURyRCxDQVY0QyxDQWE1QztBQUNBOztBQUNBTCxFQUFBQSxHQUFHLENBQUNTLFVBQUosR0FBaUJULEdBQUcsQ0FBQ1MsVUFBSixJQUFrQixFQUFuQztBQUNBVCxFQUFBQSxHQUFHLENBQUNVLFdBQUosR0FBa0JWLEdBQUcsQ0FBQ1UsV0FBSixJQUFtQixJQUFJQyxHQUFKLEVBQXJDLENBaEI0QyxDQWtCNUM7O0FBQ0FYLEVBQUFBLEdBQUcsQ0FBQ1ksS0FBSixHQUFZLGlCQUFaO0FBQ0FaLEVBQUFBLEdBQUcsQ0FBQ2EsU0FBSixHQUFnQixJQUFJQyxtQkFBSixDQUFhZCxHQUFHLENBQUNlLE9BQUosQ0FBWSxZQUFaLENBQWIsRUFBd0NDLFNBQXhDLEVBQWhCO0FBQ0FoQixFQUFBQSxHQUFHLENBQUNpQixPQUFKLEdBQWMsSUFBZDtBQUNBakIsRUFBQUEsR0FBRyxDQUFDa0IsUUFBSixHQUFlLElBQWY7QUFDQWxCLEVBQUFBLEdBQUcsQ0FBQ21CLGlCQUFKLEdBQXdCLEVBQXhCO0FBQ0FuQixFQUFBQSxHQUFHLENBQUNvQixlQUFKLEdBQXNCLEVBQXRCO0FBRUEsU0FBT25CLElBQUksRUFBWDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIENvcHlyaWdodCAoYykgMjAxOCBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBub2Zsb3dcbiAqL1xuXG5pbXBvcnQgdXVpZHY0IGZyb20gJ3V1aWQvdjQnO1xuaW1wb3J0IFVBUGFyc2VyIGZyb20gJ3VhLXBhcnNlci1qcyc7XG5pbXBvcnQgZ2V0RW52IGZyb20gJy4uL2dldC1lbnYuanMnO1xuXG5jb25zdCBlbnZWYXJzID0gZ2V0RW52KCk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1pZGRsZXdhcmUoY3R4LCBuZXh0KSB7XG4gIC8vIGVudiB2YXJzXG4gIGN0eC5yb290RGlyID0gZW52VmFycy5yb290RGlyO1xuICBjdHguZW52ID0gZW52VmFycy5lbnY7XG4gIGN0eC5wcmVmaXggPSBlbnZWYXJzLnByZWZpeDtcbiAgY3R4LmFzc2V0UGF0aCA9IGVudlZhcnMuYXNzZXRQYXRoO1xuICBjdHguY2RuVXJsID0gZW52VmFycy5jZG5Vcmw7XG5cbiAgLy8gd2VicGFjay1yZWxhdGVkIHRoaW5nc1xuICBjdHgucHJlbG9hZENodW5rcyA9IFtdO1xuICBjdHgud2VicGFja1B1YmxpY1BhdGggPVxuICAgIGN0eC53ZWJwYWNrUHVibGljUGF0aCB8fCBlbnZWYXJzLmNkblVybCB8fCBlbnZWYXJzLmFzc2V0UGF0aDtcblxuICAvLyB0aGVzZSBhcmUgc2V0IGJ5IGZ1c2lvbi1jbGksIGhvd2V2ZXIgc2luY2UgZnVzaW9uLWNsaSBwbHVnaW5zIGFyZSBub3QgYWRkZWQgd2hlblxuICAvLyBydW5uaW5nIHNpbXVsYXRpb24gdGVzdHMsIGl0IGlzIGdvb2QgdG8gZGVmYXVsdCB0aGVtIGhlcmVcbiAgY3R4LnN5bmNDaHVua3MgPSBjdHguc3luY0NodW5rcyB8fCBbXTtcbiAgY3R4LmNodW5rVXJsTWFwID0gY3R4LmNodW5rVXJsTWFwIHx8IG5ldyBNYXAoKTtcblxuICAvLyBmdXNpb24tc3BlY2lmaWMgdGhpbmdzXG4gIGN0eC5ub25jZSA9IHV1aWR2NCgpO1xuICBjdHgudXNlcmFnZW50ID0gbmV3IFVBUGFyc2VyKGN0eC5oZWFkZXJzWyd1c2VyLWFnZW50J10pLmdldFJlc3VsdCgpO1xuICBjdHguZWxlbWVudCA9IG51bGw7XG4gIGN0eC5yZW5kZXJlZCA9IG51bGw7XG4gIGN0eC5wb3N0UmVuZGVyRWZmZWN0cyA9IFtdO1xuICBjdHgudW5pdmVyc2FsVmFsdWVzID0ge307XG5cbiAgcmV0dXJuIG5leHQoKTtcbn1cbiJdfQ==