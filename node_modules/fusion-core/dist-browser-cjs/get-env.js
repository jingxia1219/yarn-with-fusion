"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadEnv = loadEnv;
exports.default = void 0;

var _assert = _interopRequireDefault(require("assert"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/* eslint-env node */
function load(key, value) {
  return process.env[key] || value;
}

function loadEnv() {
  const rootDir = load('ROOT_DIR', '.');
  const env = load('NODE_ENV', 'development');

  if (!(env === 'development' || env === 'production' || env === 'test')) {
    throw new Error(`Invalid NODE_ENV loaded: ${env}.`);
  }

  const prefix = load('ROUTE_PREFIX', '');
  (0, _assert.default)(!prefix.endsWith('/'), 'ROUTE_PREFIX must not end with /');
  const baseAssetPath = load('FRAMEWORK_STATIC_ASSET_PATH', `/_static`);
  (0, _assert.default)(!baseAssetPath.endsWith('/'), 'FRAMEWORK_STATIC_ASSET_PATH must not end with /');
  const cdnUrl = load('CDN_URL', '');
  (0, _assert.default)(!cdnUrl.endsWith('/'), 'CDN_URL must not end with /');
  const dangerouslyExposeSourceMaps = load('DANGEROUSLY_EXPOSE_SOURCE_MAPS', 'false');
  const assetPath = `${prefix}${baseAssetPath}`;
  return function loadEnv() {
    return {
      rootDir,
      env,
      prefix,
      assetPath,
      baseAssetPath,
      cdnUrl,
      webpackPublicPath: cdnUrl || assetPath,
      dangerouslyExposeSourceMaps: dangerouslyExposeSourceMaps === 'true'
    };
  };
}

var _default = true ? () => {} : loadEnv();

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9nZXQtZW52LmpzIl0sIm5hbWVzIjpbImxvYWQiLCJrZXkiLCJ2YWx1ZSIsInByb2Nlc3MiLCJlbnYiLCJsb2FkRW52Iiwicm9vdERpciIsIkVycm9yIiwicHJlZml4IiwiZW5kc1dpdGgiLCJiYXNlQXNzZXRQYXRoIiwiY2RuVXJsIiwiZGFuZ2Vyb3VzbHlFeHBvc2VTb3VyY2VNYXBzIiwiYXNzZXRQYXRoIiwid2VicGFja1B1YmxpY1BhdGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBUUE7Ozs7QUFSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUdBLFNBQVNBLElBQVQsQ0FBY0MsR0FBZCxFQUFtQkMsS0FBbkIsRUFBMEI7QUFDeEIsU0FBT0MsT0FBTyxDQUFDQyxHQUFSLENBQVlILEdBQVosS0FBb0JDLEtBQTNCO0FBQ0Q7O0FBRU0sU0FBU0csT0FBVCxHQUFtQjtBQUN4QixRQUFNQyxPQUFPLEdBQUdOLElBQUksQ0FBQyxVQUFELEVBQWEsR0FBYixDQUFwQjtBQUNBLFFBQU1JLEdBQUcsR0FBR0osSUFBSSxDQUFDLFVBQUQsRUFBYSxhQUFiLENBQWhCOztBQUNBLE1BQUksRUFBRUksR0FBRyxLQUFLLGFBQVIsSUFBeUJBLEdBQUcsS0FBSyxZQUFqQyxJQUFpREEsR0FBRyxLQUFLLE1BQTNELENBQUosRUFBd0U7QUFDdEUsVUFBTSxJQUFJRyxLQUFKLENBQVcsNEJBQTJCSCxHQUFJLEdBQTFDLENBQU47QUFDRDs7QUFDRCxRQUFNSSxNQUFNLEdBQUdSLElBQUksQ0FBQyxjQUFELEVBQWlCLEVBQWpCLENBQW5CO0FBQ0EsdUJBQU8sQ0FBQ1EsTUFBTSxDQUFDQyxRQUFQLENBQWdCLEdBQWhCLENBQVIsRUFBOEIsa0NBQTlCO0FBQ0EsUUFBTUMsYUFBYSxHQUFHVixJQUFJLENBQUMsNkJBQUQsRUFBaUMsVUFBakMsQ0FBMUI7QUFDQSx1QkFDRSxDQUFDVSxhQUFhLENBQUNELFFBQWQsQ0FBdUIsR0FBdkIsQ0FESCxFQUVFLGlEQUZGO0FBSUEsUUFBTUUsTUFBTSxHQUFHWCxJQUFJLENBQUMsU0FBRCxFQUFZLEVBQVosQ0FBbkI7QUFDQSx1QkFBTyxDQUFDVyxNQUFNLENBQUNGLFFBQVAsQ0FBZ0IsR0FBaEIsQ0FBUixFQUE4Qiw2QkFBOUI7QUFDQSxRQUFNRywyQkFBMkIsR0FBR1osSUFBSSxDQUN0QyxnQ0FEc0MsRUFFdEMsT0FGc0MsQ0FBeEM7QUFLQSxRQUFNYSxTQUFTLEdBQUksR0FBRUwsTUFBTyxHQUFFRSxhQUFjLEVBQTVDO0FBQ0EsU0FBTyxTQUFTTCxPQUFULEdBQW1CO0FBQ3hCLFdBQU87QUFDTEMsTUFBQUEsT0FESztBQUVMRixNQUFBQSxHQUZLO0FBR0xJLE1BQUFBLE1BSEs7QUFJTEssTUFBQUEsU0FKSztBQUtMSCxNQUFBQSxhQUxLO0FBTUxDLE1BQUFBLE1BTks7QUFPTEcsTUFBQUEsaUJBQWlCLEVBQUVILE1BQU0sSUFBSUUsU0FQeEI7QUFRTEQsTUFBQUEsMkJBQTJCLEVBQUVBLDJCQUEyQixLQUFLO0FBUnhELEtBQVA7QUFVRCxHQVhEO0FBWUQ7O2VBRWMsT0FBYyxNQUFNLENBQUUsQ0FBdEIsR0FBeUJQLE9BQU8sRSIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBDb3B5cmlnaHQgKGMpIDIwMTggVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAbm9mbG93XG4gKi9cbi8qIGVzbGludC1lbnYgbm9kZSAqL1xuaW1wb3J0IGFzc2VydCBmcm9tICdhc3NlcnQnO1xuXG5mdW5jdGlvbiBsb2FkKGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52W2tleV0gfHwgdmFsdWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkRW52KCkge1xuICBjb25zdCByb290RGlyID0gbG9hZCgnUk9PVF9ESVInLCAnLicpO1xuICBjb25zdCBlbnYgPSBsb2FkKCdOT0RFX0VOVicsICdkZXZlbG9wbWVudCcpO1xuICBpZiAoIShlbnYgPT09ICdkZXZlbG9wbWVudCcgfHwgZW52ID09PSAncHJvZHVjdGlvbicgfHwgZW52ID09PSAndGVzdCcpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIE5PREVfRU5WIGxvYWRlZDogJHtlbnZ9LmApO1xuICB9XG4gIGNvbnN0IHByZWZpeCA9IGxvYWQoJ1JPVVRFX1BSRUZJWCcsICcnKTtcbiAgYXNzZXJ0KCFwcmVmaXguZW5kc1dpdGgoJy8nKSwgJ1JPVVRFX1BSRUZJWCBtdXN0IG5vdCBlbmQgd2l0aCAvJyk7XG4gIGNvbnN0IGJhc2VBc3NldFBhdGggPSBsb2FkKCdGUkFNRVdPUktfU1RBVElDX0FTU0VUX1BBVEgnLCBgL19zdGF0aWNgKTtcbiAgYXNzZXJ0KFxuICAgICFiYXNlQXNzZXRQYXRoLmVuZHNXaXRoKCcvJyksXG4gICAgJ0ZSQU1FV09SS19TVEFUSUNfQVNTRVRfUEFUSCBtdXN0IG5vdCBlbmQgd2l0aCAvJ1xuICApO1xuICBjb25zdCBjZG5VcmwgPSBsb2FkKCdDRE5fVVJMJywgJycpO1xuICBhc3NlcnQoIWNkblVybC5lbmRzV2l0aCgnLycpLCAnQ0ROX1VSTCBtdXN0IG5vdCBlbmQgd2l0aCAvJyk7XG4gIGNvbnN0IGRhbmdlcm91c2x5RXhwb3NlU291cmNlTWFwcyA9IGxvYWQoXG4gICAgJ0RBTkdFUk9VU0xZX0VYUE9TRV9TT1VSQ0VfTUFQUycsXG4gICAgJ2ZhbHNlJ1xuICApO1xuXG4gIGNvbnN0IGFzc2V0UGF0aCA9IGAke3ByZWZpeH0ke2Jhc2VBc3NldFBhdGh9YDtcbiAgcmV0dXJuIGZ1bmN0aW9uIGxvYWRFbnYoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvb3REaXIsXG4gICAgICBlbnYsXG4gICAgICBwcmVmaXgsXG4gICAgICBhc3NldFBhdGgsXG4gICAgICBiYXNlQXNzZXRQYXRoLFxuICAgICAgY2RuVXJsLFxuICAgICAgd2VicGFja1B1YmxpY1BhdGg6IGNkblVybCB8fCBhc3NldFBhdGgsXG4gICAgICBkYW5nZXJvdXNseUV4cG9zZVNvdXJjZU1hcHM6IGRhbmdlcm91c2x5RXhwb3NlU291cmNlTWFwcyA9PT0gJ3RydWUnLFxuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IF9fQlJPV1NFUl9fID8gKCkgPT4ge30gOiBsb2FkRW52KCk7XG4iXX0=